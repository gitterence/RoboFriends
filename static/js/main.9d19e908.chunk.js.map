{"version":3,"sources":["components/Scroll.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Scroll","props","react_default","a","createElement","style","overflowY","border","height","children","Card","_ref","name","email","id","className","alt","src","concat","CardList","robots","map","user","i","components_Card","key","SearchBox","searchfield","searchChange","type","placeholder","value","onChange","ErrorBoundary","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","setState","Component","App","_useState","useState","_useState2","slicedToArray","setRobots","_useState3","_useState4","setsearchfield","useEffect","fetch","then","response","json","users","filteredRobots","filter","robot","toLocaleLowerCase","includes","length","components_SearchBox","event","target","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"mMAaeA,SAVA,SAACC,GAEZ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,UACjEP,EAAMQ,YCSJC,EAbF,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,KAAMC,EAAgBF,EAAhBE,MAAOC,EAASH,EAATG,GACzB,OACIZ,EAAAC,EAAAC,cAAA,OAAKW,UAAU,uDACXb,EAAAC,EAAAC,cAAA,OAAKY,IAAI,cAAcC,IAAG,wBAAAC,OAA0BJ,EAA1B,cAC1BZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKQ,GACLV,EAAAC,EAAAC,cAAA,SAAIS,MCeLM,EApBE,SAAAR,GAAgB,IAAbS,EAAaT,EAAbS,OAChB,OACIlB,EAAAC,EAAAC,cAAA,WAEQgB,EAAOC,IAAI,SAACC,EAAMC,GACd,OACIrB,EAAAC,EAAAC,cAACoB,EAAD,CACIC,IAAKF,EACLT,GAAIM,EAAOG,GAAGT,GACdF,KAAMQ,EAAOG,GAAGX,KAChBC,MAAOO,EAAOG,GAAGV,YCI9Ba,EAfG,SAAAf,GAAmC,IAAhCgB,EAAgChB,EAAhCgB,YAAaC,EAAmBjB,EAAnBiB,aAE9B,OACI1B,EAAAC,EAAAC,cAAA,OAAKW,UAAU,OACXb,EAAAC,EAAAC,cAAA,SACIW,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,MAAOJ,EACPK,SAAUJ,yCCYXK,cApBX,SAAAA,EAAYhC,GAAO,IAAAiC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMpC,KACDwC,MAAQ,CACTC,UAAU,GAHCR,mFAQfG,KAAKM,SAAS,CAAED,UAAU,qCAI1B,OAAIL,KAAKI,MAAMC,SACJxC,EAAAC,EAAAC,cAAA,yBAEJiC,KAAKpC,MAAMQ,gBAhBEmC,aC2CbC,MAvCf,WAAe,IAAAC,EAEiBC,mBAAS,IAF1BC,EAAAb,OAAAc,EAAA,EAAAd,CAAAW,EAAA,GAEJ1B,EAFI4B,EAAA,GAEIE,EAFJF,EAAA,GAAAG,EAG2BJ,mBAAS,IAHpCK,EAAAjB,OAAAc,EAAA,EAAAd,CAAAgB,EAAA,GAGJxB,EAHIyB,EAAA,GAGSC,EAHTD,EAAA,GAKXE,oBAAU,WACNC,MAAM,8CACDC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACFT,EAAUS,MAEnB,IAGH,IAIMC,EAAiBxC,EAAOyC,OAAO,SAAAC,GACjC,OAAOA,EAAMlD,KAAKmD,oBAAoBC,SAASrC,EAAYoC,uBAG/D,OAAS3C,EAAO6C,OAIR/D,EAAAC,EAAAC,cAAA,OAAKW,UAAU,MACXb,EAAAC,EAAAC,cAAA,MAAIW,UAAU,MAAd,gBACAb,EAAAC,EAAAC,cAAC8D,EAAD,CAAWtC,aAdA,SAACuC,GACpBd,EAAec,EAAMC,OAAOrC,UAcpB7B,EAAAC,EAAAC,cAACiE,EAAD,KACInE,EAAAC,EAAAC,cAACkE,EAAD,KACIpE,EAAAC,EAAAC,cAACmE,EAAD,CAAUnD,OAAQwC,OARjC1D,EAAAC,EAAAC,cAAA,sBClBMoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAApB,KAAAmB,EAAAE,KAAA,UAAqBrB,KAAK,SAAA7C,GAAiD,IAA9CmE,EAA8CnE,EAA9CmE,OAAQC,EAAsCpE,EAAtCoE,OAAQC,EAA8BrE,EAA9BqE,OAAQC,EAAsBtE,EAAtBsE,OAAQC,EAAcvE,EAAduE,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCCDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrF,EAAAC,EAAAC,cAACF,EAAAC,EAAMqF,WAAP,KACEtF,EAAAC,EAAAC,cAACqF,EAAD,QAOJjB","file":"static/js/main.9d19e908.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Scroll = (props) => {\n\n    return (\n        <div style={{ overflowY: 'scroll', border: '2px solid black', height: '600px' }}>\n            {props.children}\n        </div>\n    );\n    \n}\n\nexport default Scroll","import React from 'react';\n\n \nconst Card = ({ name, email, id }) => {  \n    return (  \n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robot_image' src={`https://robohash.org/${id}?200x200`}></img>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p> \n            </div>\n\n        </div>\n    );  \n}\n\nexport default Card\n\n\n","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card \n                            key={i} \n                            id={robots[i].id} \n                            name={robots[i].name} \n                            email={robots[i].email} \n                        />\n                    );\n                })\n            } \n        </div> \n    );\n \n}\n\nexport default CardList;","import React from 'react';\n\n\nconst SearchBox = ({ searchfield, searchChange }) => {\n\n    return (\n        <div className='pa2'>\n            <input\n                className='pa3 ba b--green bg-lightest-blue'\n                type='search'\n                placeholder='search robots'\n                value={searchfield}\n                onChange={searchChange}\n            />\n        </div>\n    );\n}\n \nexport default SearchBox","import React, { Component } from \"react\";\n\n\nclass ErrorBoundary extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            hasError: false\n        }\n    }\n\n    componentDidCatch() {\n        this.setState({ hasError: true })\n    }\n\n    render() {\n        if (this.state.hasError) {\n            return <h1>Error found</h1>\n        }\n        return this.props.children\n    }\n\n}\n\nexport default ErrorBoundary","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Scroll from '../components/Scroll';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport ErrorBoundary from '../components/ErrorBoundary';\n\nfunction App() {\n\n    const [robots, setRobots] = useState([])\n    const [searchfield, setsearchfield] = useState('')\n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => {\n                setRobots(users)\n            });\n    }, [])\n\n\n    const onSearchChange = (event) => {\n        setsearchfield(event.target.value)\n    }\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLocaleLowerCase().includes(searchfield.toLocaleLowerCase());\n    })\n\n    return (!robots.length) ?\n        (<h1>Loading</h1>)\n        :\n        (\n            <div className='tc'>\n                <h1 className='f1'>Robo Friends</h1>\n                <SearchBox searchChange={onSearchChange} />\n                <Scroll>\n                    <ErrorBoundary>\n                        <CardList robots={filteredRobots} />\n                    </ErrorBoundary>\n                </Scroll>\n            </div>\n        );\n\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'tachyons';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}